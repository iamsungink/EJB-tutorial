** EJB(Enterprise Java Bean) **

RMI(Remote Method Invocation): 자바에 내장된 기술 중 하나
- 컴퓨터간에 또는 프로그램간에 통신(객체를 주고받는다 는 것)을 할 수 있는 기능을 제공
- JVM에서 미들웨어 역할을 한다.
- 간단한 분산환경 시스템을 구축한다면 RMI를 이용할 수 있다.


EJB에서 필요한 미들웨어(Weblogic, jBoss,...)
- 미들웨어(분산환경에서 애플리케이션들이 연결되어 서로 데이터를 주고받을 수 있도록 해주는 S/W 정도로 보면되겠다.

분산 컴퓨팅 이란?
네트워크에서 서로 다른 시스템(컴퓨터) 간에 응용프로그램을 분산해서 처리하는 환경을 의미한다.
분산 컴퓨팅을 적용한 애플리케이션을 Distributed Application이라 한다.

분산 객체(distributed Object) 란?
하나의 컴퓨터에서 실행되는 객체가 다른 컴퓨터의 객체와  통신이 가능 하도록 하는 기술
분산 객체 기술

분산 책체는 자신이 존재하는 런타임 환경과는 다른 런타임에 있는 객체와 통신이 가능한 객체

EJB란?
- 대규모 분산 객체 시스템을  구축하기 위한 기술
- 자바로 서버 측 비즈니스 로직을 작성하기 위한 Enterprise 환경에서의 자바 표준

- 선수 방법 : 분산환경, 분산 객체, RMI에 대한 이해 및 JSP/Servlet의 이해가 필요
- EJB 기술을 이용하면 원격 EJB서버 메모리에 있는 클래스를 참조(메소드를 호출) 할 수 있다.
- 내부적으로 RMI를 사용한다.


[EJB 개발을 위한 환경 구축]

미들웨어 : Weblogic 12c 설치

[커넥션 풀 설정(Connection Pool) ]
- 커넥션 풀(Connection Pool), DataSource
- 커넥션 풀과 DataSource를 JNDI(Java Naming and Directory Interface)에 등록해야한다.

** 커넥션 풀과 DataSource를 JNDI에 등록하면 사용자가 커넥션을 만들때 새롭계 new 연산자를 이용해서 객체를 생성하지 않고,
   Weblogic 서버에 등록되어 있는 객체를 가져다 쓰면된다. (서버에서 커넥션을 관리하기 때문에 안정적이고 효율적으로 사용할 수 있다)
   
[JNDI : Java Naming and Directory Interface]
 Naming Service에 객체를 등록/수정/삭제/검색 기능을 제공하는 자바 스펙
 EJB에서 사용하고 있는 서비스






 - 세션빈 객체를 생성/삭제/검색 하는 메소드를 선언
 
 ** 스펙(규격, 명세)
 - javax.ejb.EJBHome 나 javax.ejb.EJBLocalHome 상속
 - create()의 인자수와 형식은 빈클래스 ejbCreate()와 인자수/형식이 일치해야 한다.
   (세션빈을 생성할 때 사용하는 메소드)
 - create()의 리턴타입은 RMI 형식, 원격인터페이스 형식(***)
 - create()는 throws javax.ejb.CreateException, java.rmi.RemoteException
 
3) 빈 클래스
 - 비즈니스 메소드를 구현하기 위한 재료(실제로 구현하는 것은 컨테이너(웹로직)가 담당한다.)
 
 ** 스펙
 - javax.ejb.SessionBean 인터페이스를 상속
 - 웹로직이 구현을 하기 때문에 final, abstract를 사용할 수 없다.
 - 하나 이상의 ejbCreate() 포함
 - 홈인터페이스의 create()와 같은 수의 ejbCreate()를 포함해야 한다. 인자의 수와 형식도 동일해야 한다.
 
 - 원격인터페이스에서 선언한 비즈니스 메소드를 반드시 구현해야 한다.


4) 배치 디스크립터 생성 : 웹로직에 배치하기 위한 정보를 작성(XML)
5) 클라이언트 어플리케이션을 제작, 실행

//비즈니스 메소드(원격인터페이스정의)를 구현하는 웹로직(컨테이너)의 내용

비즈니스 메소드{
	보안, 트랜잭션, 스레드, 자원관리 등등 작업을 처리한다.
	개발자가 구현한 비즈니스 메소드를 호출
}

** 무상태 세션빈(Stateless Session Bean) : 클라이언트에 의한 Bean요청이 있을 경우
   풀에서 제공하는 작엉이 끝나면 다시 풀로 돌아와 다음 요청을 기다린다.
   
클라이언트에 의한 요청으로부터 출발해서 Home Interface의 create() 메소드를 호출

pool안에 세션빈이 없을 경우에는
a. 인스턴스 생성
b. setSessionoContext()
c ejbCreate() 호출

** 풀에 있는 세션빈이 사용되지 않는다고 판단되는 경우에는 EJB컨테이너는 세션빈을 제거한다.
   ejbRemove() 메소드를 호출한다.